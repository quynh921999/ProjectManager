/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projectmanagement;

import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author quynh
 */
public class ListProject extends javax.swing.JFrame {

    /**
     * Creates new form ListProject
     */
    
    public static String projName;
    public ListProject()  {

        initComponents();
        showProject();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        back = new javax.swing.JButton();
        Tools = new javax.swing.JPanel();
        newProj = new javax.swing.JLabel();
        projInfo = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Window = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_proj = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_name = new javax.swing.JTextField();
        txt_managerID = new javax.swing.JTextField();
        txt_empIDs = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "Manager", "Status", "Task avaiable", "Task finsihed"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        back.setBackground(new java.awt.Color(255, 51, 153));
        back.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProjectMangement/Image/back.png"))); // NOI18N
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        Tools.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        newProj.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        newProj.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProjectMangement/Image/add_icon.png"))); // NOI18N
        newProj.setText("New Project");
        newProj.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        newProj.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                newProjMousePressed(evt);
            }
        });

        projInfo.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        projInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProjectMangement/Image/export_1.png"))); // NOI18N
        projInfo.setText("Export Info");
        projInfo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        projInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                projInfoMousePressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Tools");
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout ToolsLayout = new javax.swing.GroupLayout(Tools);
        Tools.setLayout(ToolsLayout);
        ToolsLayout.setHorizontalGroup(
            ToolsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(newProj, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
            .addComponent(projInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ToolsLayout.setVerticalGroup(
            ToolsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ToolsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(newProj, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(projInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Window.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        Window.setLayout(new java.awt.CardLayout());

        tbl_proj.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Manager", "Status", "Task available", "Task finished"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbl_proj.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_projMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbl_proj);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 852, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
        );

        Window.add(jPanel3, "card2");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Name: ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Manager Id: ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Employee Ids: ");

        txt_name.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txt_managerID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txt_empIDs.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        add.setBackground(new java.awt.Color(51, 204, 255));
        add.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProjectMangement/Image/add_icon.png"))); // NOI18N
        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        reset.setBackground(new java.awt.Color(51, 204, 255));
        reset.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        reset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProjectMangement/Image/reset_icon.png"))); // NOI18N
        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(153, 51, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton1.setText("Return ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(reset))
                .addGap(79, 79, 79)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(add)
                        .addGap(121, 121, 121)
                        .addComponent(jButton1))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txt_empIDs, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                        .addComponent(txt_managerID)
                        .addComponent(txt_name)))
                .addContainerGap(109, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_managerID, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_empIDs, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(52, 52, 52))
        );

        Window.add(jPanel4, "card2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Tools, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(back))
                    .addComponent(Window, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(Tools, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(back)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Window, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        new MainMenu().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backActionPerformed

    private void newProjMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newProjMousePressed
        Window.removeAll();
        Window.repaint();
        Window.revalidate();
        
        Window.add(jPanel4);
        Window.repaint();
        Window.revalidate();
    }//GEN-LAST:event_newProjMousePressed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        txt_name.setText(null);
        txt_managerID.setText(null);
        txt_empIDs.setText(null);
    }//GEN-LAST:event_resetActionPerformed

    private void projInfoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_projInfoMousePressed
        try {
            PrintWriter pw = new PrintWriter(new  File("C:\\Users\\quynh\\Documents\\NetBeansProjects\\ProjectManagement\\projectInfo\\projectInformation.csv"));
            StringBuilder sb = new StringBuilder();
            int rows = tbl_proj.getRowCount();
            int cols = tbl_proj.getColumnCount();
            for(int i = 0; i < rows; i++){
                for(int j = 0; j < cols; j++){
                    sb.append(tbl_proj.getModel().getValueAt(i, j) + ",");
                }
                sb.append("\r\n");
            }
         pw.write(sb.toString());
         pw.close();
         JOptionPane.showMessageDialog(null, "export success!");
        } catch (IOException ex) {
            Logger.getLogger(ListProject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_projInfoMousePressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Window.removeAll();
        Window.repaint();
        Window.revalidate();
        
        Window.add(jPanel3);
        Window.repaint();
        Window.revalidate();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        if(Emp.empDivision.equals("CEO")){
            String sql = "insert into project(managerID, employeeIDs, name)values(?, ?, ?)" ;
            try {
                login.dbc.ps = login.dbc.conn.prepareStatement(sql);            
                login.dbc.ps.setInt(1,Integer.parseInt(txt_managerID.getText()));
                login.dbc.ps.setString(2, txt_empIDs.getText());
                login.dbc.ps.setString(3, txt_name.getText());
                
                login.dbc.ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Create new project success!");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Create new project not completed!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Only CEO can create new project!");
        }
    }//GEN-LAST:event_addActionPerformed

    private void tbl_projMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_projMouseClicked
        int selectedRow = tbl_proj.getSelectedRow();
        projName = (String) tbl_proj.getModel().getValueAt(selectedRow, 0);
        ListTask listTask = new ListTask();
        listTask.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_tbl_projMouseClicked
     public ArrayList<Project> listProj() {
         ArrayList<Project> listProject = new ArrayList<>();
        try {
           // login.dbc.connect();
            String query = "select * from project";
             login.dbc.st = login.dbc.conn.createStatement();
            login.dbc.rs = login.dbc.st.executeQuery(query);
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        Project p;
        try {
            while(login.dbc.rs.next()){
                p = new Project(login.dbc.rs.getInt("ID"), login.dbc.rs.getString("name"), login.dbc.rs.getInt("managerID"), login.dbc.rs.getString("employeeIDs"), login.dbc.rs.getString("taskIDs"));
                listProject.add(p);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
            System.out.println(ex.getMessage());
        }
        return listProject;
    }
     public ArrayList<Project> listProjectManager(){
        ArrayList<Project> listProject = new ArrayList<>();
        try {
            //login.dbc.connect();
            login.dbc.st = login.dbc.conn.createStatement();
            login.dbc.rs = login.dbc.st.executeQuery("select * from project");
        } catch (SQLException ex) {
            Logger.getLogger(ListProject.class.getName()).log(Level.SEVERE, null, ex);
        }
        Project p1 = null;
        try {
            while(login.dbc.rs.next()){
                int managerID = login.dbc.rs.getInt("managerID");
                if(managerID == Emp.empID) {                    
                      p1 = new Project(login.dbc.rs.getInt("ID"), login.dbc.rs.getString("name"), login.dbc.rs.getInt("managerID"), login.dbc.rs.getString("employeeIDs"), login.dbc.rs.getString("taskIDs"));
                      listProject.add(p1);
                }   
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
            System.out.println(ex.getMessage());
        }
        return listProject;
    }
    public ArrayList<Project> listProjectEmployee(){
        ArrayList<Project> listProject = new ArrayList<>();
        try {
            //login.dbc.connect();
            login.dbc.st = login.dbc.conn.createStatement();
            login.dbc.rs = login.dbc.st.executeQuery("select * from project");
        } catch (SQLException ex) {
            Logger.getLogger(ListProject.class.getName()).log(Level.SEVERE, null, ex);
        }
        Project p1 = null;
        try {
            while(login.dbc.rs.next()){
                String employeeID = login.dbc.rs.getString("employeeIDs");
                String[] employeeIDs = employeeID.split(",");
                ArrayList<Integer> employeeIDsInt = new ArrayList<>();
                for(int i = 0; i < employeeIDs.length; i++){
                    employeeIDsInt.add(i, Integer.parseInt(employeeIDs[i]));
                    System.out.println(employeeIDsInt.get(i));
                }
                    
                if(employeeIDsInt.contains(Emp.empID)) {
                     p1 = new Project(login.dbc.rs.getInt("ID"), login.dbc.rs.getString("name"), login.dbc.rs.getInt("managerID"), login.dbc.rs.getString("employeeIDs"), login.dbc.rs.getString("taskIDs"));
                    listProject.add(p1);
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
            System.out.println(ex.getMessage());
        }
        return listProject;
    }
  
     public ArrayList<Integer[]> getInfoTask(ArrayList<Project> listProject) {
        
        ArrayList<Integer[]> listTaskID = new ArrayList<>();
        for (Project proj : listProject) {
            try {
                String[] listStrTaskID = proj.getTaskIDs().split(",");
                Integer[] listIntTaskID = new Integer[listStrTaskID.length];
                int index = 0;
                for (String i : listStrTaskID) {
                    listIntTaskID[index] = Integer.parseInt(listStrTaskID[index].trim());
                    index++;
                }
                listTaskID.add(listIntTaskID);
            } catch(Exception e) {
                
            } 
           
        }
        
        return listTaskID;
     }

    public String getNameManager(int managerID){
        String name = null;
        String sql = "select username from login where ID = " + managerID;
        try {
            login.dbc.st = login.dbc.conn.createStatement();
            login.dbc.rs = login.dbc.st.executeQuery(sql);
            if (login.dbc.rs.next()) {
                name = login.dbc.rs.getString("username");
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        return name;
    }
    public void showProject() {
        ArrayList<Project> list = new ArrayList<>();
        if(Emp.empDivision.equals("CEO"))
           list = listProj();
            
        else if(Emp.empDivision.equals("Manager"))
            list = listProjectManager();
        else if(Emp.empDivision.equals("Employee"))
            list = listProjectEmployee();
        DefaultTableModel model = (DefaultTableModel) tbl_proj.getModel();
        ArrayList<Integer[]> listTask = getInfoTask(list);
        
        int[][] count = new int[list.size()][2];
        for(int x = 0; x < count.length; x++){
            for(int y = 0; y < 2; y++){
                count[x][y] = 0;
            }
        }
            
            int index = -1;
            for (Integer[] i : listTask) {
                index ++;
                count[index][0] = i.length;
                for(int j = 0; j < i.length; j++){
                    try {
                        login.dbc.st = login.dbc.conn.createStatement();
                        login.dbc.rs = login.dbc.st.executeQuery("SELECT status FROM task WHERE id = " + i[j]);
                        //login.dbc.rs = login.dbc.st.executeQuery("Select task.status, login.username, login.ID, project.managerID from task, login, project where login.ID = project.managerID and task.ID = " + i[j]);
                        while (login.dbc.rs.next()) {
                           if(login.dbc.rs.getString("status").equals("Done")) {
                               count[index][1]++;
                           }
                        }
                        //username.add(dbc.rs.getString("username"));
                    } catch (SQLException ex) {
                        Logger.getLogger(ListProject.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                
            }
       
        Object[] row = new Object[5];
        for(int i = 0; i < list.size(); i++){
            row[0] = list.get(i).getName();
            row[1] = getNameManager(list.get(i).getManagerId());
            if(count[i][0] != 0 && count[i][0] == count[i][1])
                row[2] = "Done";
            else
                row[2] = "Not Done";
            row[3] = count[i][0];
            row[4] = count[i][1];
            model.addRow(row);
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ListProject().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Tools;
    private javax.swing.JPanel Window;
    private javax.swing.JButton add;
    private javax.swing.JButton back;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel newProj;
    private javax.swing.JLabel projInfo;
    private javax.swing.JButton reset;
    private javax.swing.JTable tbl_proj;
    private javax.swing.JTextField txt_empIDs;
    private javax.swing.JTextField txt_managerID;
    private javax.swing.JTextField txt_name;
    // End of variables declaration//GEN-END:variables
}
